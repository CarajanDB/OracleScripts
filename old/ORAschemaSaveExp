# @(#) ================================================================================================================
# @(#) File        : ORAschemaSaveExp
# @(#) Author      : Dieter Smets
# @(#)
# @(#) Description : This script does execute Oracle Package BV$ENT.SCHEMA_SAVE.EXPORT
# @(#)
# @(#)               Description:   http://lxwiki.unix.lan/wiki_root/dokuwiki/dokumentationen/doku.php?id=datenbanken:oracle:procedures:navstart#schemasave
# @(#)                              http://wsv-muv.unix.lan/mediawiki/index.php/SchemaSave
# @(#)
# @(#) Parameters:   $1:   mandatory: Oracle TNS Service Name
# @(#)               $2:   mandatory: Schema name
# @(#)               $3:   mandatory: FreeText (max 50 digits), for identifying purposes
# @(#)               $4:   mandatory: Requestor, required if executor is DBA or System User
# @(#)
# @(#) Version     : 1.6
# @(#) Datum       : 09.04.2024
# @(#)
# @(#) Presumption :
# @(#)
# @@(#)  Change History:
# @@(#)
# @@(#)  1.0  2018-03-16  Smets       Created
# @@(#)       2018-03-19  Smets       Translate Parm SCHEMA to uppercase.
# @@(#)  1.1  2018-03-26  Smets       USAGE hinzugefuegt
# @@(#)  1.2  2018-04-09  Smets       REQUESTOR hinzugefuegt
# @@(#)  1.3  2019-10-16  Smets       Aenderung Password Location fuer BVBTCUSR auf /app/oracle/admin/etc/pwddir
# @@(#)  1.4  2020-06-04  Djuric      Umstellung Parameter auf Options
# @@(#)                   Smets       Vorbereitung fuer Oracle 19c (Common Users)
# @@(#)  1.5  2020-07-28  Smets       Korrektur fuer Vorbereitung fuer Oracle 19c
# @@(#)  1.6  2024-04-09  MPils       Added "" for Oracle Password
# @(#) ================================================================================================================
set +x

FILETS=`date +%Y%m%d_%H%M%S`
CURDIR=`dirname $0`
SYSOUTDIR=/app/oracle/admin/log
SCRIPTSHORTDESC="This script does execute Oracle Package BV$ENT.SCHEMA_SAVE.EXPORT as descriebed here:

                             http://lxwiki.unix.lan/wiki_root/dokuwiki/dokumentationen/doku.php?id=datenbanken:oracle:procedures:navstart#schemasave
                             http://wsv-muv.unix.lan/mediawiki/index.php/SchemaSave
"
#-----------------------------------------------------------------------------------------------------------------
#     FUNCTION: Help routine
#-----------------------------------------------------------------------------------------------------------------
function usage()
{
echo ""
echo "  Command     : $(basename $0)"
echo "  Description : $SCRIPTSHORTDESC"
echo ""
echo "  Parameters  : $DB_OPT,		Oracle TNS Service Name"
echo "                $S_OPT,			Schema Name"
echo "                $FT_OPT,		FreeText (max 50 digits), for identifying purposes"
echo "                $R_OPT,		Optional, User AD Account of SchemaSave Requestor"
echo ""
echo ""
echo "  Example     : $(basename $0) $DB_OS psh-f $S_OS bvpshadm $FT_OS "'"'"Save for any Reason"'"' [$R_OS 270000]
echo ""
echo ""
exit $RC
}
#-----------------------------------------------------------------------------------------------------------------
#     Get Parameters
#-----------------------------------------------------------------------------------------------------------------
DB_OS="-db"; DB_OL="--db_name";	DB_OPT="$DB_OS[|$DB_OL]"
S_OS="-s"; S_OL="--schema";	S_OPT="$S_OS[|$S_OL]"
FT_OS="-ft"; FT_OL="--freetext";FT_OPT="$FT_OS[|$FT_OL]"
R_OS="-r"; R_OL="--requestor";	R_OPT="$R_OS[|$R_OL]"
H_OS="-h"; H_OL="-?";		H_OPT="$H_OS[|$H_OL]"
help=0
if [ $# -eq 0 ]
then
  usage
else
  while [ $# -gt 0 ]; do
    case "$1" in
      $DB_OS | $DB_OL ) DBNAME="$2"
                        DBNAME=`echo $DBNAME|tr [a-z] [A-Z]`
                        DBNAME_LC=`echo $DBNAME|tr [A-Z] [a-z]`
                        dbname=1
                        shift 2;;
      $S_OS | $S_OL )   DBSCHEMA="$2"
                        DBSCHEMA=`echo $DBSCHEMA|tr [a-z] [A-Z]`
                        dbschema=1
                        shift 2;;
      $FT_OS | $FT_OL ) freetext=1
                        FREE_TEXT="$2"
                        shift 2;;
      $R_OS | $R_OL )   REQUESTOR="$2"
                        REQUESTOR=`echo $REQUESTOR|tr [A-Z] [a-z]`
                        requestor=1
                        shift 2;;
      $H_OS | $H_OL )   help=1
                        usage;;
      * )               echo "*************************************************************"
                        echo "* Parameter Error at '$1'"
                        echo "*************************************************************"
                        usage;;
    esac
  done
fi
#-----------------------------------------------------------------------------------------------------------------
#     test to see if they gave the mandatory options
#-----------------------------------------------------------------------------------------------------------------
if [ "x" == "x$dbname" ]; then
  MESSAGE="$DB_OPT Option is required!"
  logger_error "$MESSAGE"
  exit 1
fi
if [ "x" == "x$dbschema" ]; then
  MESSAGE="$S_OPT Option is required!"
  logger_error "$MESSAGE"
  exit 1
fi
if [ "x" == "x$freetext" ]; then
  MESSAGE="$FT_OPT Option is required!"
  logger_error "$MESSAGE"
  exit 1
fi

DATABASE=$DBNAME
DATABASE=$( echo "$DATABASE" | tr '[:lower:]' '[:upper:]' )
SCHEMA=$DBSCHEMA
SCHEMA=$( echo "$SCHEMA" | tr '[:lower:]' '[:upper:]' )
#DBENV=$( echo "$DBENV" | tr '[:lower:]' '[:upper:]' )
FREETEXT=$FREE_TEXT
REQUESTOR=$REQUESTOR

SYSOUT=${SYSOUTDIR}/$(basename $0)-SYSOUT-${DATABASE}-${SCHEMA}-${FILETS}.log
rm -f ${SYSOUT}

# Get Password from PasswordFile:
#XONOFF=$(set -o | awk '/^xtrace/ {print $2}')             # xtrace Zustand sichern
#set -x
PWDDIR=/app/oracle/admin/etc/pwddir
#PASSFILE=/oranfs/share/ora_admin/dbapwd/.orapwd
DBAUSER="BVBTCUSR"
source $PWDDIR/.pwdfile_db_bvbtcusr
DBAPASS=${PWDBVBTCUSR}

SCRIPTNAME=$(basename $0)
FILETS=`date +%Y%m%d_%H%M%S%N`

## Determine Oracle Version:
#TMPFILE=/tmp/$(basename $0)_$(date +%Y%m%d%H%M%S)
#  (
#sqlplus -s /nolog <<EOT
#connect ${DBAUSER}/${DBAPASS}@${DATABASE}
#set pagesize 0
#select nvl(max(REGEXP_SUBSTR(VERSION,'[^.]+',1,1)), 'NO_ORA_VERSION') from dba_registry where comp_name = 'Oracle Database Catalog Views' ;
#EOT
#) > $TMPFILE
#ORAVER=$(cat $TMPFILE)
#if [ "${ORAVER}" == 'NO_ORA_VERSION' ]
#   then
#      echo "* No Oracle Version detected. Assume Version 12."
#      ORAVER='12'
#   else
#      echo "* Oracle Version detected: ${ORAVER}"
#fi
#rm $TMPFILE
#
#if [ "${ORAVER}" == '19' ]
#   then
#     IMPPACK="schema_save_19c"
#   else
#     IMPPACK="schema_save"
#fi

cd ${CURDIR}
RC=0

# Change Ownership of Log-Files to "oinstall":
echo '' >>${SYSOUT}
for LOGFILES in `find ${SYSOUTDIR} -name "$(basename $0)*" -user "$USER" -group barmstaf`
do
chgrp oinstall $LOGFILES
done
echo "All actions are logged in ${SYSOUT}!"

START_TIME_ALL=$(date +%s);

sqlplus /nolog <<EOT >> ${SYSOUT} 2>&1
connect ${DBAUSER}/"${DBAPASS}"@${DATABASE}

whenever sqlerror exit failure commit;
whenever oserror exit failure commit;
set sqlblanklines on;
set serveroutput on;

--EXECUTE schema_save.export('${SCHEMA}','${FREETEXT}') ;

Begin
schema_save.export(SCHEMA=>'${SCHEMA}',FREETEXT=>'${FREETEXT}',REQUESTOR=>'${REQUESTOR}') ;
End;
/
quit;
EOT

RC=$?
#cat ${SYSOUT}

grep -Ec "SP2-[0-9][0-9][0-9][0-9]" ${SYSOUT} >/dev/null 2>&1
if [[ $? -eq 0 || ${RC} -gt 0 ]]
   then
     echo "*************************************************************"
     echo "* Fehler bei Ausfuehrung schema_save.export - RC=$RC"
     echo " "
     cat ${SYSOUT}
     RC=1
     echo "*************************************************************"
fi

END_TIME_ALL=$(date +%s);
ELAPSED_TIME_ALL=`echo $((END_TIME_ALL-START_TIME_ALL)) | awk '{printf "%d:%02d:%02d", $1/3600, ($1/60)%60, $1%60}'`
echo $(basename $0)' - Run Time: '${ELAPSED_TIME_ALL} >>${SYSOUT}
echo $(basename $0)' - Run Time: '${ELAPSED_TIME_ALL}

## Cleanup log-files older than DELDAY days:
DELDAY="+1"        # Anzahl Tage fuers lueschen alter log Daten
find ${SYSOUTDIR}/ -name "$(basename $0)-*.*" -mtime ${DELDAY} -type f -exec rm -f {} \;

exit ${RC}
