#!/bin/bash
# @(#) ================================================================================================================
# @(#)  File        : ORAsetpasswords
# @(#)  Author      : Marcel Pils
# @(#)
# @(#)  Description : This script set standard db user passwords
# @(#)
# @(#)  Version     : 1.3
# @(#)  Date        : 2024-03-20
# @(#)
# @(#)
# @(#)  Attention   : This script must be started as user ORACLE
# @(#)
# @@(#)  Change History:
# @@(#)
# @@(#)    1.0  2012-12-14  Pils           Created
# @@(#)    1.1  2016-03-22  wi             New Profile for DBSNMP added (EM_EPROF) 
# @@(#)    1.2  2018-01-25  Pils           changed pwddir location
# @@(#)    1.3  2024-03-20  smh            Adjust new Password Verification Function to profile DEFAULT (TADBA-6117)
# @@(#)
# @(#) ----------------------------------------------------------------------------------------------------------------
#

#-----------------------------------------------------------------------------------------------------------------
#     Global script environment
#-----------------------------------------------------------------------------------------------------------------
#MAILTO="unix-dba@barmenia.de"
#HOST=`hostname -s`
#LONGHOST=`hostname -f`
SCRIPTNAME=$(basename $0)
SCRIPTSHORTDESC="Set standard db user passwords"
ORACLE_BASE="/app/oracle"
LOGDIR="/app/logs"
LOGFILE="${LOGDIR}/${SCRIPTNAME}_`date +%Y%m%d%H%M%S%N`.log"
SCRIPTPATH="/app/oracle/bin"
PWDDIR="/app/oracle/admin/etc/pwddir"
FUNCTIONSFILE="${SCRIPTPATH}/.bash_functions"

source $FUNCTIONSFILE
RC=$?
if [ $RC -ne 0 ]; then
 echo "${FUNCTIONSFILE} file not found!"
 exit $RC
fi

source ${PWDDIR}/.pwdfile_db_sys
source ${PWDDIR}/.pwdfile_db_system
source ${PWDDIR}/.pwdfile_db_dbsnmp

#-----------------------------------------------------------------------------------------------------------------
#     FUNCTION: Help routine
#-----------------------------------------------------------------------------------------------------------------
function usage()
{
echo ""
echo "  Command     : $SCRIPTNAME"
echo "  Description : $SCRIPTSHORTDESC"
echo ""
echo "  Parameters  : -sid,                     Database Name "
echo "                -h,                       help screen"
echo ""
echo "  Example     : ORAsetpasswords -sid MYMARS"
echo ""
echo "  Attention   : This script must be started as user ORACLE"
echo ""
exit
}

#-----------------------------------------------------------------------------------------------------------------
#     Check if user is oracle, otherwise abort   
#-----------------------------------------------------------------------------------------------------------------
if [ `id -un` != "oracle" ]; then
  Bmsg -rm "Script may not run as user `id -un`, it must be started and run as oracle"
  RC=255
  Bmsg -rm "Error Code: ${RC}"
  exit $RC
fi

#-----------------------------------------------------------------------------------------------------------------
#     Check if database environment is set
#-----------------------------------------------------------------------------------------------------------------
if [ "x$DBNAME" == "x" ] || [ "x$DBUNAME" == "x" ]; then
  Bmsg -rm "Database environment is not set (DBNAME, DBUNAME, ...)"
  Bmsg -rm "Set it with '. dbset <database>' first!"
  RC=255
  Bmsg -rm "Error Code: ${RC}"
  exit $RC
fi

#-----------------------------------------------------------------------------------------------------------------
#     Get Parameter
#-----------------------------------------------------------------------------------------------------------------
while true; do
  case "$1" in
    -sid | --oracle_sid ) ORACLE_SID="$2";sid=1; shift 2 ;;
    -h | --help ) usage ;;
    -- ) shift; break ;;
    * ) break ;;
  esac
done

#-----------------------------------------------------------------------------------------------------------------
#     test to see if they gave the option
#-----------------------------------------------------------------------------------------------------------------
if [ "x" == "x$sid" ]; then
  Bmsg -rm "-sid | --oracle_sid [option] is required"; echo ""; usage
fi

#-----------------------------------------------------------------------------------------------------------------
#     Set Environment
#-----------------------------------------------------------------------------------------------------------------
ORACLE_SID_UC=`echo $ORACLE_SID|tr 'a-z' 'A-Z'`
ORACLE_SID_LC=`echo $ORACLE_SID|tr 'A-Z' 'a-z'`
ORACLE_HOME=`grep "^${ORACLE_SID_UC}:" /etc/oratab|awk -F ":" ' { print $2 }'`
if [ "$DBNAME" != "$DBUNAME" ]; then
  grantSYSDBAtoDBSNMP1="prompt grant sysdba to dbsnmp"
  grantSYSDBAtoDBSNMP2="grant sysdba to dbsnmp;"
else
  grantSYSDBAtoDBSNMP1=""
  grantSYSDBAtoDBSNMP2=""
fi

#-----------------------------------------------------------------------------------------------------------------
#     Main program - start
#-----------------------------------------------------------------------------------------------------------------
Bscriptstart "${SCRIPTNAME} - ${SCRIPTSHORTDESC}"

##### Set Passwords ################
export ORACLE_SID=$ORACLE_SID_UC
sqlplus / as sysdba <<EOSQL
prompt set password for system
alter user system identified by "$PWDSYSTEM";
prompt set password for sys
alter user sys identified by "$PWDSYS";
prompt set password for dbsnmp
alter user dbsnmp identified by "$PWDDBSNMP";
prompt unlock dbsnmp
alter user dbsnmp profile em_prof  account unlock;
ALTER PROFILE DEFAULT LIMIT PASSWORD_VERIFY_FUNCTION "BV_VERIFY_FUNCTION" ;
${grantSYSDBAtoDBSNMP1}
${grantSYSDBAtoDBSNMP2}
exit
EOSQL

#-----------------------------------------------------------------------------------------------------------------
#     Main program - end
#-----------------------------------------------------------------------------------------------------------------
Bscriptend 
exit
