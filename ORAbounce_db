#!/bin/bash
# @(#) ================================================================================================================
# @(#)  File        : ORAbounce_db
# @(#)  Author      : Thorsten Thiel
# @(#)  Modified    :
# @(#)
# @(#)  Description : This script bounces an Oracle instance
# @(#)
# @(#)  Version     : 1.0
# @(#)  Datum       : 04.11.2021
# @(#)
# @(#)
# @(#)  Attention   : This script must be started as user ORACLE
# @(#)
# @@(#)  Change History:
# @@(#)
# @@(#)    1.0  20.10.2015  Thi  Created
# @@(#)    1.1  04.11.2021  Thi  changed to transactional shutdown
# @(#)
# @(#) ================================================================================================================
# ----------------------------------------------------------------------------------------------------------------
set +x

#-----------------------------------------------------------------------------------------------------------------
#     Global script environment
#-----------------------------------------------------------------------------------------------------------------
#MAILTO="unix-dba@barmenia.de"
#HOST=`hostname -s`
#LONGHOST=`hostname -f`
SCRIPTNAME=$(basename $0)
SCRIPTSHORTDESC="Bounces an oracle instance"
ORACLE_BASE="/app/oracle"
LOGDIR="/app/logs"
LOGFILE="${LOGDIR}/${SCRIPTNAME}_`date +%Y%m%d%H%M%S%N`.log"

source /app/oracle/bin/.bash_functions
RC=$?
if [ $RC -ne 0 ]; then
 echo ".bash_functions file not found!"
 exit $RC
fi

#-----------------------------------------------------------------------------------------------------------------
#     FUNCTION: Help routine
#-----------------------------------------------------------------------------------------------------------------
function usage()
{
echo ""
echo "  Command     : $SCRIPTNAME"
echo "  Description : $SCRIPTSHORTDESC"
echo ""
echo "  Parameters  : -sid,      ORACLE_SID"
echo "                -h,        help screen"
echo ""
echo "  Example     : ORAbounce_db -sid dopp"
echo ""
echo "  Attention   : This script must be started as user ORACLE"
echo ""
exit
}

#-----------------------------------------------------------------------------------------------------------------
#     FUNCTION: chk_log_err
#-----------------------------------------------------------------------------------------------------------------
chk_log_err ()
{
OERR=`grep "ORA-" $CHECKEDLOG`

if [ "$OERR" != "" ]
then
   echo
   echo "$MESSAGE"
   echo "$OERR"
   echo
   echo "exit ..."
   exit 1
fi
}


#-----------------------------------------------------------------------------------------------------------------
#     Check if user is oracle, otherwise abort   
#-----------------------------------------------------------------------------------------------------------------
if [ `id -un` != "oracle" ]; then
  Bmsg -rm "Script may not run as user `id -un`, it must be started and run as oracle"
  RC=255
  Bmsg -rm "error code: ${RC}"
  exit $RC
fi

#-----------------------------------------------------------------------------------------------------------------
#     Get Parameter
#-----------------------------------------------------------------------------------------------------------------
while true; do
  case "$1" in
    -sid ) sid=1; ORACLE_SID=$2; shift 2;;
    -h | --help ) usage ;;
    -- ) shift; break ;;
    * ) break ;;
  esac
done

#-----------------------------------------------------------------------------------------------------------------
#     test to see if they gave the option
#-----------------------------------------------------------------------------------------------------------------
if [ "x" == "x$sid" ]; then
  Bmsg -rm "-sid [option] is required"; echo ""; usage
fi

#-----------------------------------------------------------------------------------------------------------------
#     Set Environment
#-----------------------------------------------------------------------------------------------------------------
. /app/oracle/bin/dbset $ORACLE_SID

#-----------------------------------------------------------------------------------------------------------------
#     Main program - start
#-----------------------------------------------------------------------------------------------------------------
Bscriptstart -l $LOGFILE "${SCRIPTNAME} - ${SCRIPTSHORTDESC}"

##### bounce ORACLE instance ############
Bmsg -1l $LOGFILE -m "bounce ORACLE instance"
CHECKEDLOG=/tmp/bounce_${ORACLE_SID}.log
sqlplus -s / as sysdba <<EOSQL
spool $CHECKEDLOG
shutdown transactional;
startup;
exit;
EOSQL

chk_log_err
rm $CHECKEDLOG 2>/dev/null

Bmsg -gl $LOGFILE -m "instance $ORACLE_SID bounced successfully"

#-----------------------------------------------------------------------------------------------------------------
#     Main program - end
#-----------------------------------------------------------------------------------------------------------------
Bscriptend -l $LOGFILE
exit
