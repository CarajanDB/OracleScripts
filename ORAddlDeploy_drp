# @(#)!/bin/bash
# @(#) ==================================================================================
# @(#)  File        : ORAddlDeploy_drp
# @(#)  Author      : Dieter Smets
# @(#)  Modified    :
# @(#)
# @(#)  Description : This script will DROP Oracle Restore Points created by ORAddlDeploy Process
# @(#)                (Name begins with "ORAddlDeploy_") based on age in hours.
# @(#)                Since 1.2 it will also take a restorepoints' self-defined
# @(#)                lifespan (name ends on /_[0-9]{1-2}[hd]/) into consideration.
# @(#)                Script should run as a Control-M cycle Job at every Oracle DB.
# @(#)
# @(#)  Version     : 1.3
# @(#)  Datum       : 02.09.2024
# @(#)
# @(#)  Attention   : This script must be started as user ORACLE
# @(#)
# @@(#)  Change History:
# @@(#)
# @@(#)    1.0  2018-09-27  Smets          Created.
# @@(#)    1.1  2018-09-28  Smets          Added: Check for multiple Instances on Host and run for each Instance.
# @@(#)                                    Added: Check Instances if running.
# @@(#)    1.2  2020-12-17  Danowski       The restorepoints' new optional feature
# @@(#)                                    (self-defined lifespan) is now taken into
# @@(#)                                    consideration when checking whether they
# @@(#)                                    should be dropped.
# @@(#)    1.3  2024-09-02  Danga          changed LOGDIR 
# @@(#)-----------------------------------------------------------------------------------
#set -x
set +x

#-----------------------------------------------------------------------------------
#     Global script environment
#-----------------------------------------------------------------------------------
SCRIPTNAME=$(basename $0)
SCRIPTSHORTDESC="Drop Restore Points created by ORAddlDeploy Process based on a
                given age in hours and their optional self-defined lifespan."
ORACLE_BASE="/app/oracle"
LOGDIR="/app/oracle/admin/log"
LOGFILE="${LOGDIR}/${SCRIPTNAME}_`date +%Y%m%d%H%M%S%N`.log"

ORACLE_BASE="/app/oracle"
RMANTAB="${ORACLE_BASE}/admin/config/backup/rmantab"
ORATAB="/etc/oratab"

source /app/oracle/bin/.bash_functions
RC=$?
if [ $RC -ne 0 ]; then
 echo ".bash_functions file not found!"
 exit $RC
fi

#-----------------------------------------------------------------------------------
#     FUNCTION: Help routine
#-----------------------------------------------------------------------------------
function usage()
{
echo ""
echo "  Command     : $SCRIPTNAME"
echo "  Description : $SCRIPTSHORTDESC"
echo ""
echo "  Parameters  : -a <hours>                     Age of Restore Points to drop in hours"
echo ""
echo "  Example     : $SCRIPTNAME -a 3"
echo ""
echo "  Attention   : This script must be started as user ORACLE"
echo ""
exit
}

#-----------------------------------------------------------------------------------
#     Check if user is oracle, otherwise abort   
#-----------------------------------------------------------------------------------
if [ `id -un` != "oracle" ]; then
  Bmsg -rm "Script may not run as user `id -un`, it must be started and run as oracle"
  RC=255
  Bmsg -rm "Error Code: ${RC}"
  exit $RC
fi

#-----------------------------------------------------------------------------------
#     Get Parameter
#-----------------------------------------------------------------------------------
while true; do
  case "$1" in
    -a ) DRPAGE="$2";drpage=1; shift 2 ;;
    -h | --help ) usage ;;
    -- ) shift; break ;;
    * ) break ;;
  esac
done

#-----------------------------------------------------------------------------------
#     test to see if they gave the option
#-----------------------------------------------------------------------------------
if [ "x" == "x$DRPAGE" ]; then
  Bmsg -rm "-a [option] is required"; echo ""; usage
fi

#-----------------------------------------------------------------------------------
#     Main program - start
#-----------------------------------------------------------------------------------
Bscriptstart "${SCRIPTNAME} - ${SCRIPTSHORTDESC}"

RCSUM=0
#     Get ORACLE_SID List from RMANTAB
ORACLE_SID_LIST=`grep -v "^#" ${RMANTAB}|cut -d: -f1|sort|uniq`

# execute processing for each DB on server:
for INST in $ORACLE_SID_LIST
do
#  #### Set environment for current instance:
   OH=`grep "^${INST}:" ${ORATAB}` 
   if [ $? -ne 0 ]; then
     Bmsg -rm "${INST} not in ${ORATAB}"
     exit 0
   fi
   ORACLE_SID=${INST}
   ORACLE_HOME=`echo ${OH}|cut -d: -f2`
   export ORACLE_HOME=${ORACLE_HOME}
   export ORACLE_SID=${ORACLE_SID}

#  #### Check Database Status, if OPEN #########
   Bmsg -rm "${ORACLE_SID}: Check if Database Status is OPEN!"
   DBOpen=$(sqlplus -s / as sysdba <<EOSQL
     set heading off
     set pages 0
     select status from v\$instance;
     exit;
EOSQL
   )
   if [ "$DBOpen" != "OPEN" ]; then
     Bmsg -rm "${ORACLE_SID}: Database Status is not OPEN!"
     Bmsg -rm "${ORACLE_SID}: Will be ignored, not applicable!"
     exit 0
   fi

#  #### drop applicable Restore Point(s) #########
   Bmsg -rm "${ORACLE_SID}: Drop Restore Points if any available!"
   sqlplus -s / as sysdba <<EOSQL
   whenever sqlerror exit failure ROLLBACK;
   set serveroutput on size 1000000

   DECLARE
     l_to_be_removed BOOLEAN;
     l_lifespan INT;
   begin
   --select and process restorepoints without custom lifespan
     for i in (
       SELECT NAME FROM V\$RESTORE_POINT
         WHERE NAME LIKE 'ORAddlDeploy?_%' ESCAPE '?' 
         AND TIME <    SYSDATE - (1/24*${DRPAGE})
         AND NAME NOT LIKE '%?__h' ESCAPE '?'
         AND NAME NOT LIKE '%?___h' ESCAPE '?'
         AND NAME NOT LIKE '%?__d' ESCAPE '?'
         AND NAME NOT LIKE '%?___d' ESCAPE '?'
     )
     loop
       dbms_output.put_line ('DROP RESTORE POINT: '||i.NAME);
       execute immediate 'DROP RESTORE POINT "'||i.NAME||'"';
     end loop;
   --select and process restorepoints with custom lifespan
     for i in (
       SELECT NAME, TIME, SUBSTR(NAME, -1) as UNIT FROM V\$RESTORE_POINT
         WHERE TIME < SYSDATE - (1/24*${DRPAGE})
         AND (
           NAME LIKE 'ORAddlDeploy?_%?_%?__h' ESCAPE '?'
           OR NAME LIKE 'ORAddlDeploy?_%?_%?___h' ESCAPE '?'
           OR NAME LIKE 'ORAddlDeploy?_%?_%?__d' ESCAPE '?'
           OR NAME LIKE 'ORAddlDeploy?_%?_%?___d' ESCAPE '?'
         )
     )
     loop
      l_to_be_removed := FALSE;
      l_lifespan := TO_NUMBER(
        SUBSTR(
          i.NAME,
          INSTR(i.NAME, '_', -1) + 1,
          INSTR(i.NAME, i.UNIT, -1)
          - INSTR(i.NAME, '_', -1) -1
        )
      );
      IF i.UNIT = 'd' THEN
        IF i.TIME < SYSDATE - (l_lifespan) THEN
          l_to_be_removed := TRUE;
        END IF;
      ELSIF i.UNIT = 'h' THEN
        IF i.TIME < SYSDATE - (1/24*l_lifespan) THEN
          l_to_be_removed := TRUE;
        END IF;
      END IF;
      IF l_to_be_removed THEN
        dbms_output.put_line ('DROP RESTORE POINT: '||i.NAME);
        execute immediate 'DROP RESTORE POINT "'||i.NAME||'"';       END IF;
     end loop;
   end;
/
   exit;
EOSQL

   RC=$?
   echo "Returncode = "${RC}
   RCSUM=$((${RCSUM}+${RC}))
done
#-----------------------------------------------------------------------------------
#     Main program - end
#-----------------------------------------------------------------------------------
Bscriptend 
exit ${RCSUM}

