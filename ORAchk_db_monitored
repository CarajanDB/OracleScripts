# @(#) ================================================================================================================
# @(#) Name .........: ORAchk_db_monitored
# @(#) Autor ........: Thorsten Thiel
# @(#) Funktion .....: are all instances from orahosts monitored in foglight
# @(#) Version  .....: 1.6
# @(#) Datum ........: 12.09.2022
# @(#) Format .......: ORAchk_db_monitored
# @(#) Beispiel .....: ORAchk_db_monitored
#
# @@(#) Beschreibung :
# @@(#)                Das Skript prueft, ob alle ORACLE-Instanzen, die in der Datei /oranfs/share/ora_admin/SYSTEM/RemoteExec/orahosts
# @@(#)                aufgefuehrt sind, auch mittels Foglight gemonitored werden. Instanzen mit Endbuchstabe P bzw I werden gegen
# @@(#)                die Foglight-Instanz fuer produktive Maschinen (sysmgt04) alle anderen Oracle-Instanzen gegen das "Foglight-Testsystem"
# @@(#)                (sysmgt14) geprueft.
# @@(#) Aenderungen .:
# @@(#) 1.0 28.12.2017 thi created
# @@(#) 1.1 29.12.2017 thi added field (to_be_monitored) to orahosts. it contains characters y or n to point out that this instance should be monitored or not.
# @@(#)                    instances that are marked not to be monitored will not be warned
# @@(#) 1.2 10.01.2018 thi unmonitored p and i instances will generate a warning per email to unix-dba@barmenia.de;
# @@(#)                    all other unmonitored instances will be logged
# @@(#) 1.3 10.01.2018 thi as ORAHOSTS file only exists on lx0wj/transferhost1, this script has to be run as user oracle on lx0wj
# @@(#) 1.4 18.01.2018 thi changed search pattern in foglight xml file from <Host> to <Name>
# @@(#) 1.5 11.09.2022 tow changed foglight environment and host from sysmgt04 to lxpssfms1p and transferhost1 to lxdba1p
# @@(#) 1.6 12.09.2022 tow changed logdir path
# @(#) ================================================================================================================

#-----------------------------------------------------------------------------------------------------------------
#     Global script environment
#-----------------------------------------------------------------------------------------------------------------
source /app/oracle/bin/ORAlib
Logger
DIFFFILE=./fogora.diffs
MAILADRESS="unix-dba@barmenia.de"
ORAHOSTS=/oranfs/share/ora_admin/SYSTEM/RemoteExec/orahosts
VALID_RUNHOST=lxdba1p
RUNHOST=`hostname -s`
if [ "$RUNHOST" != "$VALID_RUNHOST" ]
then
   logger_error "script has to be run on >$VALID_RUNHOST< only!"
   logger_error "exit ..."
   exit 1
fi

VALID_RUNUSER=oracle
if [ "$USER" != "$VALID_RUNUSER" ]
then
   logger_error "script has to be run on >$VALID_RUNUSER< only!"
   logger_error "exit ..."
   exit 1
fi

#-----------------------------------------------------------------------------------------------------------------
# FUNCTION  determine stage by ORACLE_SID
# last character of ORACLE_SID has to be P I F K or E
#-----------------------------------------------------------------------------------------------------------------
function det_stage_by_sid()
{
MESSAGE="determine stage by ORACLE_SID"
Bmsg -gm "$MESSAGE"
logger_info "$MESSAGE"
i=$((${#DBNAME}-1))
SIDSTAGE="${DBNAME:$i:1}"
return
}

#-----------------------------------------------------------------------------------------------------------------
# FUNCTION check digit
#-----------------------------------------------------------------------------------------------------------------
function check_digit()
{
#prueft, ob es sich um eine Zahl handelt
if [ $# -ne 2 ]
then
   MESSAGE="CHECK_DIGIT: this function needs two parameters: digit and param"
   Bmsg -rm "$MESSAGE" 2>&1
   logger_error "$MESSAGE"
   exit 1
fi
DIGIT=$1 #zu pruefende Zahl
PARAM=$2 #Name der Programmvariablen in der die Zahl genutzt werden soll fuer Fehlerausgabe
PRUF_STRING=`echo $DIGIT|sed s/[0-9]//g`
if [ "${PRUF_STRING}#" != "#" ]
then
   MESSAGE="parameter $PARAM should be an digit; found >$DIGIT<!"
   Bmsg -rm "$MESSAGE" 2>&1
   logger_error "$MESSAGE"
   exit 1
fi
}

#-----------------------------------------------------------------------------------------------------------------
#     FUNCTION: log maintenance
#-----------------------------------------------------------------------------------------------------------------
function log_maint()
{
if [ $# -ne 1 ]
then
   echo "need a numeric value for KEEPDAYS"
   echo "exit ..."
   exit 1
else
   KEEPDAYS=$1
   check_digit $KEEPDAYS KEEPDAYS
   SCRIPTNAME=$(basename $0)
   find /app/oracle/admin/log -name "${SCRIPTNAME}*" -atime +$KEEPDAYS -exec rm {} \;
fi
}

# Grep from orahosts with maschine names.
echo "------------------------------------------------------" |tee -a $DIFFFILE
ORAHOSTSANZ="$(grep -v -e "^#" -e "-" $ORAHOSTS | cut -d':' -f2,4 | sort |uniq|wc -l)"
# count Orahost entries
tput setaf 1
echo -e "Orahost entries:       ${ORAHOSTSANZ}\t(to be monitored)" |tee -a $DIFFFILE
echo |tee -a $DIFFFILE

# count fog_oracle.xml entries
FOG_P_ANZ=0
wget https://xmlexport:Ozr26V26@lxpssfms1p.barmenia.lan:8443/console/xml/system:barmenia_databases_export.1 -O fog_oracle04.xml >/dev/null 2>&1
if [ -s fog_oracle04.xml ]
then
   FOG_P_ANZ=`cat fog_oracle04.xml | grep "<Name>" | sort -u | wc -l`
   echo "Foglight-Prod entries: $FOG_P_ANZ" |tee -a $DIFFFILE
ORA_P_ANZ=$(for DBNAME in `grep -v -e "^#" -e ':n:' -e "-" $ORAHOSTS|cut -d: -f2,4|tr [a-z] [A-Z]|sort|uniq`
do
   i=$((${#DBNAME}-1))
   SIDSTAGE="${DBNAME:$i:1}"
   echo "$SIDSTAGE"
done|grep -e P -e I|wc -l)
   echo -e "ORAHOST P&I Systeme:   $ORA_P_ANZ\t(to be monitored)" |tee -a $DIFFFILE
   echo |tee -a $DIFFFILE
else
   echo "Foglight-Prod entries couldn't be determined!"
fi
FOG_T_ANZ=0
wget https://xmlexport:Ozr26V26@lxpssfms1ua.barmenia.lan:8443/console/xml/system:barmenia_databases_export.1 -O fog_oracle14.xml >/dev/null 2>&1
if [ -s fog_oracle14.xml ]
then
   FOG_T_ANZ=`cat fog_oracle14.xml | grep "<Name>" | sort -u | wc -l`
   echo "Foglight-Test entries: $FOG_T_ANZ" |tee -a $DIFFFILE
ORA_T_ANZ=$(for DBNAME in `grep -v -e "^#" -e ':n:' -e "-" $ORAHOSTS|cut -d: -f2,4|tr [a-z] [A-Z]|sort|uniq`
do
   i=$((${#DBNAME}-1))
   SIDSTAGE="${DBNAME:$i:1}"
   echo "$SIDSTAGE"
done|grep -e E -e K -e F -e T -e 1 -e 2|wc -l)
echo -e "ORAHOST E,K,F Systeme: $ORA_T_ANZ\t(to be monitored)" |tee -a $DIFFFILE
else
   echo "Foglight-Test entries couldn't be determined!"
fi
tput sgr0
echo |tee -a $DIFFFILE

if [ $FOG_P_ANZ -gt 0 ]
then
#determine ORAHOST entries not in Foglight-Prod
   echo "ORAHOST entries not in Foglight-Prod:" |tee -a $DIFFFILE
   echo "-------------------------------------" |tee -a $DIFFFILE
   DIFF=0
   for DBHOST in `grep -v -e "^#" -e "-" $ORAHOSTS|cut -d: -f2,4,5|tr [a-z] [A-Z]|sort|uniq`
   do
      TOBEMON=`echo $DBHOST|cut -d: -f3`
      if [ "$TOBEMON" == "Y" ]
      then
         DBNAME=`echo $DBHOST|cut -d: -f2`
         LXNAME=`echo $DBHOST|cut -d: -f1`
         i=$((${#DBNAME}-1))
         SIDSTAGE="${DBNAME:$i:1}"
         if [ "$SIDSTAGE" == "P" -o "$SIDSTAGE" == "I" ]
         then
            grep $LXNAME fog_oracle04.xml|grep $DBNAME >/dev/null
            if [ $? -eq 1 ]
            then
               echo $DBHOST |tee -a $DIFFFILE
               DIFF=1
            fi
         fi
      fi
   done
fi

if [ $FOG_T_ANZ -gt 0 ]
then
#determine ORAHOST entries not in Foglight-Test
   echo |tee -a $DIFFFILE
   echo "ORAHOST entries not in Foglight-Test:" |tee -a $DIFFFILE
   echo "-------------------------------------" |tee -a $DIFFFILE
   for DBHOST in `grep -v -e "^#" -e "-" $ORAHOSTS|cut -d: -f2,4,5|tr [a-z] [A-Z]|sort|uniq`
   do
      TOBEMON=`echo $DBHOST|cut -d: -f3`
      if [ "$TOBEMON" == "Y" ]
      then
         DBNAME=`echo $DBHOST|cut -d: -f2`
         LXNAME=`echo $DBHOST|cut -d: -f1`
         i=$((${#DBNAME}-1))
         SIDSTAGE="${DBNAME:$i:1}"
         if [ "$SIDSTAGE" == "E" -o "$SIDSTAGE" == "K" -o "$SIDSTAGE" == "F" -o "$SIDSTAGE" == "T" -o "$SIDSTAGE" == "1" -o "$SIDSTAGE" == "2" ]
         then
            grep $LXNAME fog_oracle14.xml|grep $DBNAME >/dev/null
            if [ $? -eq 1 ]
            then
               echo $DBHOST |tee -a $DIFFFILE
            fi
         fi
      fi
   done
fi
if [ -s $DIFFFILE ]
then
   MESSAGE=`cat $DIFFFILE`
   logger_info "$MESSAGE"
   if [ $DIFF -eq 1 ]
   then
      cat $DIFFFILE |mail -s "ORACLE-Instanzen nicht in Foglight ueberwacht!" $MAILADRESS
   fi
fi
rm fog_oracle14.xml fog_oracle04.xml $DIFFFILE 2>/dev/null

#-----------------------------------------------------------------------------------------------------------------
#     Main program - end
#-----------------------------------------------------------------------------------------------------------------
log_maint 7
logger_info "Ende"
exit
