#!/bin/bash
# ================================================================================================================
#  File        : ORAinit
#  Author      : Daniel Oberdick
#  Modified    :
#
#  Description : This script start/stops all enabled DBs on this Server
#
#  Version     : 1.0
#
#  Attention   : This script must be started as user Root
#
#  Change History:
#
#    1.0  2012-07-18  Oberdick                        Created
#
# chkconfig: 345 90 90
# Default-Start:  2 3 4 5
# Default-Stop: 0 1 6
#-----------------------------------------------------------------------------------------------------------------

# Source function library.
. /etc/init.d/functions


#-----------------------------------------------------------------------------------------------------------------
# Variables
#-----------------------------------------------------------------------------------------------------------------
ORACLE_BASE="/app/oracle"
ORATAB="/etc/oratab"
MAILTO="unix-dba@barmenia.de"
SCRIPTNAME="ORAinit"
HOST=`hostname -s`
LONGHOST=`hostname -f`
OWNER="oracle"
GROUP="oinstall"
CONNECT="/ as sysdba"
SQLDIR="/app/oracle/bin/sql/init"
STATE=$1
LOGDIR="/app/oracle/admin/log/init"
StartDate=`date +"%Y-%m-%d"`
RETVAL=0


# define colors
normal="\033[0m"
green="\033[32m"
red="\033[31m"


function usage()
{
echo ""
echo "  Command     : ORAinit <start|stop> "
echo ""
echo "                -h,                       	help screen"
echo ""
exit
}
#-----------------------------------------------------------------------------------------------------------------
# FUNCTION: Log routine
#-----------------------------------------------------------------------------------------------------------------
function log()
{
case $1 in
    -r)                    echo -e "${red}$2${normal}"
                           ;;
    -l)                    echo "`date +"%Y-%m-%d %H:%M:%S.%N"` $2" >>${LOGFILE}
                           ;;
    -h)               echo "`date +"%Y-%m-%d %H:%M:%S.%N"` #-----------------------------------------------------------------------------------------------------------------" >>${LOGFILE}
                           echo "`date +"%Y-%m-%d %H:%M:%S.%N"` # $2" >>${LOGFILE}
                           echo "`date +"%Y-%m-%d %H:%M:%S.%N"` #-----------------------------------------------------------------------------------------------------------------" >>${LOGFILE}
                           ;;
    *)                     echo "$1"
                           echo "`date +"%Y-%m-%d %H:%M:%S.%N"` $1" >>${LOGFILE};;
esac
}


#-----------------------------------------------------------------------------------------------------------------
#     Get SID to start/stop
#-----------------------------------------------------------------------------------------------------------------
get_sids() {
  ORACLE_SID_LIST=`grep ":Y" /etc/oratab|cut -d: -f1`
}

#-----------------------------------------------------------------------------------------------------------------
#     Get SID ENV
#-----------------------------------------------------------------------------------------------------------------
get_sid_env() {
  OH=`grep "^${INST}:" ${ORATAB}` 
  if [ $? -ne 0 ]; then log -r "ORACLE_SID: ${INST} not in ${ORATAB}"; exit 255;fi
  ORACLE_HOME=`echo ${OH}|cut -d: -f2`
  LSNRCTL="${ORACLE_HOME}/bin/lsnrctl"
  SQLPLUS="${ORACLE_HOME}/bin/sqlplus"
}

#-----------------------------------------------------------------------------------------------------------------
#     Create Logfile
#-----------------------------------------------------------------------------------------------------------------
create_logfile() {
  LOGFILE="${LOGDIR}/${INST}_${StartDate}.log"
  touch $LOGFILE
  chown ${OWNER}:${GROUP} $LOGFILE
}

#-----------------------------------------------------------------------------------------------------------------
#     RUN LSNRCTL
#-----------------------------------------------------------------------------------------------------------------
listener() {
  
  LISTENERRUN="export ORACLE_HOME=${ORACLE_HOME};export ORACLE_SID=${INST};${LSNRCTL} ${STATE} LISTENER_${INST}"

  echo "${LISTENERRUN}" >> ${LOGFILE}
  echo -n $"${STATE} LISTENER: ${INST}"
  su - ${OWNER} -c "${LISTENERRUN} >> ${LOGFILE}"
  RETVAL=$?
  if [ $RETVAL -eq 0 ];then success;else failure;fi
  echo
  return $RETVAL
}

#-----------------------------------------------------------------------------------------------------------------
#     RUN SQLPLUS
#-----------------------------------------------------------------------------------------------------------------
sqlplus() {

  SQLPLUSRUN="export ORACLE_HOME=${ORACLE_HOME};export ORACLE_SID=${INST};${SQLPLUS} ${CONNECT} @${SQLDIR}/${STATE}.sql"

  echo "$SQLPLUSRUN" >> ${LOGFILE}
  echo -n $"${STATE} DB: ${INST}"
  su - ${OWNER} -c "${SQLPLUSRUN} >> ${LOGFILE}"
  RETVAL=$?
  if [ $RETVAL -eq 0 ];then success;else failure;fi
  echo
  return $RETVAL
}


#-----------------------------------------------------------------------------------------------------------------
#-----------------------------------------------------------------------------------------------------------------
#-----------------------------------------------------------------------------------------------------------------
#     MAIN PART
#-----------------------------------------------------------------------------------------------------------------
#-----------------------------------------------------------------------------------------------------------------
#-----------------------------------------------------------------------------------------------------------------

#-----------------------------------------------------------------------------------------------------------------
#     Check if user is oracle, otherwise abort
#-----------------------------------------------------------------------------------------------------------------
if [ `id -un` != "root" ]; then
  echo -e "${red}Script may not run as user `id -un`, it must be started and run as root${normal}"
    exit 255
fi

#-----------------------------------------------------------------------------------------------------------------
#     Get List of SIDs to start / stop
#-----------------------------------------------------------------------------------------------------------------
get_sids

case $1 in
   start)
	for INST in $ORACLE_SID_LIST
	do
          create_logfile
	  get_sid_env
	  listener
	  sqlplus
	done
         ;;
   stop)
	for INST in $ORACLE_SID_LIST
	do
          create_logfile
	  get_sid_env
	  listener
	  sqlplus
	done
         ;;
   *) usage;;
esac

exit $RETVAL
